version: '3.4'

services:
  # Customers Api & Sidecar
  microdelivery.customers.api:
    container_name: microdelivery.customers.api
    image: ${DOCKER_REGISTRY-}microdeliverycustomersapi
    build:
      context: .
      dockerfile: src/MicroDelivery.Customers.Api/Dockerfile
    depends_on:
      - sqlserver
      - redis
  microdelivery.customers.api.dapr:
    container_name: microdelivery.customers.api.dapr
    image: "daprio/daprd:latest"
    network_mode: "service:microdelivery.customers.api"
    depends_on:
      - microdelivery.customers.api

  # Products Api & Sidecar
  microdelivery.products.api:
    container_name: microdelivery.products.api
    image: ${DOCKER_REGISTRY-}microdeliveryproductsapi
    build:
      context: .
      dockerfile: src/MicroDelivery.Products.Api/Dockerfile
    depends_on:
        - mongo
        - redis
  microdelivery.products.api.dapr:
    container_name: microdelivery.products.api.dapr
    image: "daprio/daprd:latest"
    network_mode: "service:microdelivery.products.api"
    depends_on:
      - microdelivery.products.api

  # Orders Api & Sidecar
  microdelivery.orders.api:
    container_name: microdelivery.orders.api
    image: ${DOCKER_REGISTRY-}microdeliveryordersapi
    build:
      context: .
      dockerfile: src/MicroDelivery.Orders.Api/Dockerfile
    depends_on:
      - microdelivery.customers.api
      - microdelivery.products.api
      - mongo
      - rabbit
  microdelivery.orders.api.dapr:
    container_name: microdelivery.orders.api.dapr
    image: "daprio/daprd:latest"
    network_mode: "service:microdelivery.orders.api"
    depends_on:
      - microdelivery.orders.api

  # Shipping Api & Sidecar
  microdelivery.shipping.api:
    container_name: microdelivery.shipping.api
    image: ${DOCKER_REGISTRY-}microdeliveryshippingapi
    build:
      context: .
      dockerfile: src/MicroDelivery.Shipping.Api/Dockerfile
    depends_on:
      - rabbit
  microdelivery.shipping.api.dapr:
    container_name: microdelivery.shipping.api.dapr
    image: "daprio/daprd:latest"
    network_mode: "service:microdelivery.shipping.api"
    depends_on:
      - microdelivery.shipping.api
  
  # Notifications Api & Sidecar
  microdelivery.notifications.api:
    container_name: microdelivery.notifications.api
    image: ${DOCKER_REGISTRY-}microdeliverynotificationsapi
    build:
      context: .
      dockerfile: src/MicroDelivery.Notifications.Api/Dockerfile
    depends_on:
      - rabbit
  microdelivery.notifications.api.dapr:
    container_name: microdelivery.notifications.api.dapr
    image: "daprio/daprd:latest"
    network_mode: "service:microdelivery.notifications.api"
    depends_on:
      - microdelivery.notifications.api

  # Discount Api & Sidecar
  microdelivery.discount.api:
    container_name: microdelivery.discount.api
    image: ${DOCKER_REGISTRY-}microdeliverydiscountapi
    build:
      context: .
      dockerfile: src/MicroDelivery.Discount.Api/Dockerfile
    depends_on:
      - redis
  microdelivery.discount.api.dapr:
    container_name: microdelivery.discount.api.dapr
    image: "daprio/daprd:latest"
    network_mode: "service:microdelivery.discount.api"
    depends_on:
      - microdelivery.discount.api

  # Other services
  redis:
    container_name: redis
    restart: always
    image: redis:alpine
  
  mongo:
    container_name: mongo
    restart: always
    image: mongo

  sqlserver:
    container_name: sqlserver
    restart: always
    image: mcr.microsoft.com/mssql/server:2022-latest

  rabbit:
    container_name: rabbit  
    image: "rabbitmq:3-management"
    restart: always

  smtp4dev:
    container_name: smtp4dev
    image: rnwood/smtp4dev:v3
    restart: always
